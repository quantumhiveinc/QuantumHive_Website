// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
 provider = "prisma-client-js"
}

datasource db {
 provider = "mongodb"
 url = env("PROD_DATABASE_URL")
}

model BlogPost {
 id String @id @default(auto()) @map("_id") @db.ObjectId
 title String
 slug String @unique
 description String?
 contentJson Json?
 published Boolean @default(false)
 publishedAt DateTime?
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
 featuredImageUrl String?
 metaTitle String?
 metaDescription String?
 youtubeUrl String?
 images Image[]

 @@map("blog_posts")
}

model CaseStudy {
 id String @id @default(auto()) @map("_id") @db.ObjectId
 title String
 slug String @unique
 description String?
 content String?
 published Boolean @default(false)
 publishedAt DateTime?
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt

 @@map("case_studies")
}

model Category {
 id String @id @default(auto()) @map("_id") @db.ObjectId
 name String @unique
 slug String @unique

 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt

 @@map("categories")
}

model Tag {
 id String @id @default(auto()) @map("_id") @db.ObjectId
 name String @unique
 slug String @unique

 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt

 @@map("tags")
}

model Image {
 id String @id @default(auto()) @map("_id") @db.ObjectId
 url String // URL of the image (e.g., from S3)
 altText String? // Alt text for accessibility
 blogPostId String // Foreign key to BlogPost
 blogPost BlogPost @relation(fields: [blogPostId], references: [id])

 createdAt DateTime @default(now())

 @@map("images")
}

model Industry {
 id String @id @default(auto()) @map("_id") @db.ObjectId
 title String @unique
 slug String @unique
 description String?
 content String?
 published Boolean @default(false)
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
 // Add specific fields like associatedServices, representativeImage later

 @@map("industries")
}

model Setting {
 id String @id @default(auto()) @map("_id") @db.ObjectId
 key String @unique // e.g., "unsplash_access_key", "site_title"
 value String // Store encrypted values for sensitive keys
 category String // e.g., "integrations", "general" - for grouping/filtering
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt

 @@index([category]) // Add index for faster lookups by category
 @@map("settings")
}

model Lead {
 id String @id @default(auto()) @map("_id") @db.ObjectId
 fullName String
 email String @unique
 phone String?
 company String?
 message String?
 sourceFormName String
 submissionUrl String
 submissionTimestamp DateTime @default(now())
 ipAddress String?
 status String @default("New")

 createdAt DateTime @default(now()) // Standard timestamp
 updatedAt DateTime @updatedAt // Standard timestamp

 @@index([sourceFormName])
 @@index([status])
 @@index([submissionTimestamp])
 @@map("leads") // Explicit table name
}

model Service {
 id String @id @default(auto()) @map("_id") @db.ObjectId
 title String
 slug String @unique
 description String?
 icon String? // Optional: For an icon representation (e.g., SVG name or URL)
 published Boolean @default(false)
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt

 @@map("services")
}